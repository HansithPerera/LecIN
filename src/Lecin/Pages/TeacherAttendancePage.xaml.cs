using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Json;
using System.Text.Json;
using Microsoft.Maui.Controls;

namespace Lecin.Pages;

public partial class TeacherAttendancePage : ContentPage
{
    // Windows: use HTTPS dev port. Android emulator: use 10.0.2.2 to reach host machine.
#if ANDROID
    private const string BaseUrl = "http://10.0.2.2:5105";
#else
    private const string BaseUrl = "https://localhost:7239";
#endif

    private static readonly JsonSerializerOptions JsonOpts = new()
    {
        PropertyNameCaseInsensitive = true
    };

    private readonly HttpClient _http = new();

    public TeacherAttendancePage()
    {
        InitializeComponent();
    }

    private async void OnGetAttendanceClicked(object sender, EventArgs e)
    {
        // reset UI
        ErrorLabel.IsVisible = false;
        ErrorLabel.Text = "";
        OverallLabel.Text = "";
        CourseList.ItemsSource = null;
        CourseList.IsVisible = false;

        // validate student id
        if (!Guid.TryParse(StudentIdEntry.Text, out var studentId))
        {
            ErrorLabel.Text = "Enter a valid GUID for Student ID.";
            ErrorLabel.IsVisible = true;
            return;
        }

        try
        {
            var url = $"{BaseUrl}/api/teacher/attendance/percentage/{studentId}";
            var dto = await _http.GetFromJsonAsync<AttendancePercentageDto>(url, JsonOpts);

            if (dto is null)
            {
                ErrorLabel.Text = "No data.";
                ErrorLabel.IsVisible = true;
                return;
            }

            // overall
            OverallLabel.Text = $"Overall: {dto.Percentage:F1}% ({dto.Attended}/{dto.TotalClasses})";

            // by course list
            if (dto.ByCourse is { Count: > 0 })
            {
                var rows = dto.ByCourse
                    .Select(c => new CourseRow(c.CourseCode, c.Attended, c.TotalClasses, c.Percentage))
                    .ToList();

                CourseList.ItemsSource = rows;
                CourseList.IsVisible = true;
            }
        }
        catch (Exception ex)
        {
            ErrorLabel.Text = ex.Message;
            ErrorLabel.IsVisible = true;
        }
    }

    // DTOs that mirror the backend response shape
    public record AttendancePercentageDto(
        Guid StudentId,
        int TotalClasses,
        int Attended,
        double Percentage,
        List<CourseAttendanceDto> ByCourse
    );

    public record CourseAttendanceDto(
        string CourseCode,
        int TotalClasses,
        int Attended,
        double Percentage
    );

    public record CourseRow(string CourseCode, int Attended, int Total, double Percentage)
    {
        public string TotalsLine => $"{Attended}/{Total} • {Percentage:F1}%";
    }
}



/*
public partial class TeacherAttendancePage : ContentPage
{
    private readonly HttpClient _http = new();
    //const string BaseUrl = "http://localhost:5105";
    const string BaseUrl = "https://localhost:7239";

    public TeacherAttendancePage()
    {
        InitializeComponent();  // <-- will be generated by the XAML compiler once hooked up
    }

    private async void OnGetAttendanceClicked(object sender, EventArgs e)
    {
        ErrorLabel.IsVisible = false;
        OverallLabel.Text = "";

        if (!Guid.TryParse(StudentIdEntry.Text, out var studentId))
        {
            ErrorLabel.Text = "Enter a valid GUID for Student ID.";
            ErrorLabel.IsVisible = true;
            return;
        }

        try
        {
            var url = $"{BaseUrl}/api/teacher/attendance/percentage/{studentId}";
            var dto = await _http.GetFromJsonAsync<AttendancePercentageDto>(
                url,
                new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });

            if (dto is null)
            {
                ErrorLabel.Text = "No data.";
                ErrorLabel.IsVisible = true;
                return;
            }

            OverallLabel.Text = $"Overall: {dto.Percentage:F1}% ({dto.Attended}/{dto.TotalClasses})";
        }
        catch (Exception ex)
        {
            ErrorLabel.Text = ex.Message;
            ErrorLabel.IsVisible = true;
        }
    }

    // Frontend shape; keep in sync with your backend response
    public record AttendancePercentageDto(
        Guid StudentId,
        int TotalClasses,
        int Attended,
        double Percentage,
        List<CourseAttendanceDto> ByCourse
    );
    public record CourseAttendanceDto(string CourseCode, int TotalClasses, int Attended, double Percentage);
}
*/


